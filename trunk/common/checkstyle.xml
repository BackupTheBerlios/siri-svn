<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<!-- Checkstyle properties for Cargo projects -->
<module name="Checker">

  <!-- Other modules -->
  <module name="SuppressionFilter">
    <property name="file" value="${checkstyle.suppressions.file}"/>
  </module>

    <!-- ======================================================================================
		   Miscellaneous Checks (that do not require a TreeWalker)
		 ====================================================================================== -->
  <module name="NewlineAtEndOfFile">
    <!-- We use a setting that works on both windows and unix. Windows is crlf and Unix is
         lf thus it'll work on both -->
    <property name="lineSeparator" value="lf"/>
  </module>
  <module name="Translation"/>

  <!-- ======================================================================================
         Duplicate code
         
         Checks that have been tried but that we do not want to activate at this point:
           <module name="StrictDuplicateCode"/> : We cannot activate this check because 
           there seems to be no way to exclude our header files from the check.
       ====================================================================================== -->

  <module name="TreeWalker">

    <!-- Javadoc Comments -->
  
    <!-- ======================================================================================
		   Naming Conventions
		 ====================================================================================== -->
    <module name="AbstractClassName"/>
    <module name="ConstantName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName">
      <!-- Allow for UI methods generated by idea -->
      <property name="format" value="^[a-z][a-zA-Z0-9]*$|^\$\$\$setupUI\$\$\$$"/>
    </module>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>

    <!-- Headers -->
  
    <!-- ======================================================================================
		   Imports

		   Checks that have been tried but that we do not want to activate at this point:
             <module name="ImportOrder">
		 ====================================================================================== -->
    <module name="AvoidStarImport"/>
    <module name="IllegalImport"/>
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>
  
    <!-- Size violations -->
  
    <!-- Whitespace -->
  
    <!-- Modifiers -->
  
    <!-- Blocks -->
  
    <!-- ======================================================================================
		   Coding Problems
		   
		   Checks that have been tried but that we do not want to activate at this point:
             <module name="ArrayTrailingComma"/>
             <module name="AvoidInlineConditionals"/>
             <module name="FinalLocalVariable"/>
             <module name="HiddenField"/>
             <module name="IllegalCatch"/>			 
             <module name="IllegalToken"/>
             <module name="IllegalTokenText"/>
             <module name="IllegalType"/>
             <module name="MagicNumber"/>
             <module name="MissingCtor"/>
             <module name="RedundantThrows"/>
             <module name="RequireThis"/>
             <module name="UnnecessaryParentheses"/>
		 ====================================================================================== -->
    <module name="CovariantEquals"/>
    <module name="DeclarationOrder"/>
    <module name="DefaultComesLast"/>
    <module name="DoubleCheckedLocking"/>
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="ExplicitInitialization"/>
    <module name="FallThrough"/>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean, java.lang.String"/>
    </module>
    <module name="InnerAssignment"/>
    <module name="JUnitTestCase"/>
    <module name="MissingSwitchDefault"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="NestedIfDepth">
      <property name="max" value="2"/>
    </module>
	<module name="NestedTryDepth"/>
	<module name="PackageDeclaration"/>
    <module name="ParameterAssignment"/>
    <module name="ReturnCount"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <module name="SuperClone"/>
    <module name="SuperFinalize"/>

    <!-- ======================================================================================
		   Class Design
		   
		   Checks that have been tried but that we do not want to activate at this point:
             <module name="DesignForExtension"/>
             <module name="InterfaceIsType"/>
             <module name="ThrowsCount"/>

		 ====================================================================================== -->
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="MutableException"/>
    <module name="VisibilityModifier">
      <property name="protectedAllowed" value="true"/>
      <property name="publicMemberPattern" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>

    <!-- ======================================================================================
		   Metric Checks
		   
		   Checks that have been tried but that we do not want to activate at this point:
		 ====================================================================================== -->
    <module name="BooleanExpressionComplexity"/>
    <!-- TODO: To be explored
    <module name="ClassDataAbstractionCoupling"/>
    <module name="ClassFanOutComplexity"/>
    <module name="CyclomaticComplexity"/>
    <module name="NPathComplexity"/>
    <module name="JavaNCSS"/>
    -->

    <!-- ======================================================================================
		   Miscellaneous Checks
		   
		   Checks that have been tried but that we do not want to activate at this point:
             <module name="DescendantToken"/>
             <module name="RequiredRegexp"/>
             <module name="FinalParameters"/>
 		 ====================================================================================== -->
    <module name="ArrayTypeStyle"/>
    <module name="Indentation"/>
    <!--module name="TodoComment">
      <property name="format" value="TODO|FIXME"/>
      <property name="severity" value="info"/>
    </module-->
    <module name="TrailingComment"/>
    <module name="UncommentedMain">
      <property name="excludedClasses" value="ResinRun$|\.Main$"/>
    </module>
    <module name="UpperEll"/>

    <!-- Avoid finalizers (this will not find violations that contain linebreaks) -->
    <module name="GenericIllegalRegexp">
      <property name="format" value="((public)|(protected))\s+void\s+finalize\(\s*\)"/>
      <property name="message" value="Avoid finalizers"/>
    </module>

    <!-- No direct printing to System.out or System.err -->
    <module name="GenericIllegalRegexp">
      <property name="format" value="System\.(out|err)\."/>
      <property name="message" value="Don't write directly to System.out our System.err"/>
    </module>

    <!-- No @author tags -->
    <module name="GenericIllegalRegexp">
      <property name="format" value="@author"/>
      <property name="message" value="No @author tag allowed"/>
    </module>

    <!-- Optional Checks -->
  
    <!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		  TODO: Checks below have not yet been moved to the section above. This needs to be
		        done
         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->
    
    <!-- General file checks -->
    <module name="FileLength"/>
<!--
    <module name="Header">
      <property name="headerFile" value="${checkstyle.header.file}"/>
      <property name="ignoreLines" value="4,5,6,7"/>
    </module>
-->    
    <module name="LineLength">
      <property name="ignorePattern" value="(@version|@see|^import)"/>
      <property name="max" value="100"/>
    </module>
    <module name="TabCharacter"/>
    
    <!-- Code formatting -->
    <module name="EmptyBlock">
      <property name="tokens" value="LITERAL_CATCH"/>
      <property name="option" value="text"/>
    </module>
    <module name="NeedBraces"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="DOT"/>
      <property name="allowLineBreaks" value="true"/>
    </module>
    <module name="NoWhitespaceBefore">
      <property name="tokens" value="DOT"/>
      <property name="allowLineBreaks" value="true"/>
    </module>
    <module name="OperatorWrap"/>
    <module name="LeftCurly">
      <property name="option" value="nl"/>
    </module>
    <module name="RightCurly">
      <property name="option" value="alone"/>
    </module>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround"/>
    
    <!-- Coding style -->
    <module name="MethodLength"/>
    <module name="ModifierOrder"/>
    <module name="ParameterNumber"/>
    <module name="ParenPad"/>
    <module name="RedundantModifier"/>

    <!-- Javadoc related checks -->
    <module name="JavadocType">
      <property name="scope" value="private"/>
      <property name="versionFormat" value="\$Id.*\$"/>
    </module>
    <module name="JavadocMethod">
      <property name="scope" value="private"/>
      <property name="allowUndeclaredRTE" value="true"/>
    </module>
    <module name="JavadocVariable">
      <property name="scope" value="private"/>
    </module>

  </module>
  
</module>
