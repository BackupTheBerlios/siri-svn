//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2004.09.16 at 02:17:29 CEST
//


package org.iris.client.settings.xml.impl;

public class IrisserverTypeImpl
    implements org.iris.client.settings.xml.IrisserverType, com.sun.xml.bind.JAXBObject,
    org.iris.client.settings.xml.impl.runtime.UnmarshallableObject,
    org.iris.client.settings.xml.impl.runtime.XMLSerializable,
    org.iris.client.settings.xml.impl.runtime.ValidatableObject
{

    protected java.lang.String _Description;
    protected java.lang.String _Rmiservice;
    protected java.lang.String _Address;
    protected java.lang.String _Name;
    protected boolean has_Loggingport;
    protected short _Loggingport;
    public final static java.lang.Class version = (org.iris.client.settings.xml.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS()
    {
        return (org.iris.client.settings.xml.IrisserverType.class);
    }

    public java.lang.String getDescription()
    {
        return _Description;
    }

    public void setDescription(java.lang.String value)
    {
        _Description = value;
    }

    public java.lang.String getRmiservice()
    {
        return _Rmiservice;
    }

    public void setRmiservice(java.lang.String value)
    {
        _Rmiservice = value;
    }

    public java.lang.String getAddress()
    {
        return _Address;
    }

    public void setAddress(java.lang.String value)
    {
        _Address = value;
    }

    public java.lang.String getName()
    {
        return _Name;
    }

    public void setName(java.lang.String value)
    {
        _Name = value;
    }

    public short getLoggingport()
    {
        return _Loggingport;
    }

    public void setLoggingport(short value)
    {
        _Loggingport = value;
        has_Loggingport = true;
    }

    public org.iris.client.settings.xml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.iris.client.
        settings.xml.impl.runtime.UnmarshallingContext context)
    {
        return new org.iris.client.settings.xml.impl.IrisserverTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.iris.client.settings.xml.impl.runtime.XMLSerializer context) throws org.xml.sax.
        SAXException
    {
        if (!has_Loggingport)
        {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Loggingport"));
        }
        context.startElement("", "name");
        context.endNamespaceDecls();
        context.endAttributes();
        try
        {
            context.text( ( (java.lang.String) _Name), "Name");
        }
        catch (java.lang.Exception e)
        {
            org.iris.client.settings.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "description");
        context.endNamespaceDecls();
        context.endAttributes();
        try
        {
            context.text( ( (java.lang.String) _Description), "Description");
        }
        catch (java.lang.Exception e)
        {
            org.iris.client.settings.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "address");
        context.endNamespaceDecls();
        context.endAttributes();
        try
        {
            context.text( ( (java.lang.String) _Address), "Address");
        }
        catch (java.lang.Exception e)
        {
            org.iris.client.settings.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "loggingport");
        context.endNamespaceDecls();
        context.endAttributes();
        try
        {
            context.text(javax.xml.bind.DatatypeConverter.printShort( ( (short) _Loggingport)), "Loggingport");
        }
        catch (java.lang.Exception e)
        {
            org.iris.client.settings.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "rmiservice");
        context.endNamespaceDecls();
        context.endAttributes();
        try
        {
            context.text( ( (java.lang.String) _Rmiservice), "Rmiservice");
        }
        catch (java.lang.Exception e)
        {
            org.iris.client.settings.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
    }

    public void serializeAttributes(org.iris.client.settings.xml.impl.runtime.XMLSerializer context) throws org.xml.sax.
        SAXException
    {
        if (!has_Loggingport)
        {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Loggingport"));
        }
    }

    public void serializeURIs(org.iris.client.settings.xml.impl.runtime.XMLSerializer context) throws org.xml.sax.
        SAXException
    {
        if (!has_Loggingport)
        {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Loggingport"));
        }
    }

    public java.lang.Class getPrimaryInterface()
    {
        return (org.iris.client.settings.xml.IrisserverType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator()
    {
        if (schemaFragment == null)
        {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize( ("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su" + "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra" +
                "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi" + "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b" + "expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv." + "grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su" +
                             "n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000" + "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq" + "\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002" +
                "dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d" +
                             "Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000)com.sun.msv.datatyp" + "e.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;" +
                             "xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFace" +
                "t\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000" + "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)L" +
                             "com/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lc" +
                             "om/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/la" +
                "ng/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0018L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom" +
                             "/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun." + "msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000," + "com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000s" + "r\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlways" +
                "Validxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002" + "\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019" +
                "t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\u001f\u0001q\u0000~\u0000#t\u0000\u000ben" + "umerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u0012" +
                             "prodserver_tdvas01t\u0000\ftest_preas01t\u0000\u0010localdevelopmentxsr\u00000com" + ".sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~" + "\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000" + "~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpt\u0000\u000estring-derivedq\u0000~\u0000\u001csr\u0000\u001dcom.sun.m" + "sv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.gramm" + "ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003" + "sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u000eppsr\u0000\"com." + "sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0005QName" +
                             "sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000" + "\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000:q\u0000~\u0000$sr\u0000#com.sun.msv.grammar.S" + "impleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~" + "\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)ht" +
                             "tp://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gramm" + "ar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00005\u0001psq\u0000~" + "\u0000>t\u0000\u0004nameq\u0000~\u0000\u001csq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppq\u0000~\u0000#q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000%" + "q\u0000~\u0000$sq\u0000~\u00001ppsq\u0000~\u00003q\u0000~\u00006pq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000bdescription" + "q\u0000~\u0000\u001csq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsq\u0000~\u0000\u0012q\u0000~\u0000\u001cpq\u0000~\u0000\u001f\u0000\u0000q\u0000~\u0000#q\u0000~\u0000#q" + "\u0000~\u0000&sq\u0000~\u0000\'w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\t127.0.0.1t\u0000\u0007tdvas02t\u0000\u0007preas01xq\u0000~" + "\u0000-sq\u0000~\u0000.t\u0000\u000estring-derivedq\u0000~\u0000\u001csq\u0000~\u00001ppsq\u0000~\u00003q\u0000~\u00006pq\u0000~\u00007q\u0000~\u0000@" + "q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0007addressq\u0000~\u0000\u001csq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000\"com.s" + "un.msv.datatype.xsd.ShortType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.data" + "type.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000\u0016xq\u0000~" +
                "\u0000!q\u0000~\u0000$t\u0000\u0005shortq\u0000~\u0000<sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiv" + "eFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000" + "\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000\u0014ppq\u0000~\u0000<\u0000\u0001sr\u0000*" + "com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000fp" + "pq\u0000~\u0000<\u0000\u0000sr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000" + "bq\u0000~\u0000$t\u0000\u0003intq\u0000~\u0000<sq\u0000~\u0000eppq\u0000~\u0000<\u0000\u0001sq\u0000~\u0000ippq\u0000~\u0000<\u0000\u0000sr\u0000!com.sun.m" + "sv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000bq\u0000~\u0000$t\u0000\u0004longq\u0000~\u0000<sq" + "\u0000~\u0000eppq\u0000~\u0000<\u0000\u0001sq\u0000~\u0000ippq\u0000~\u0000<\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Int" + "egerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000bq\u0000~\u0000$t\u0000\u0007integerq\u0000~\u0000<sr\u0000,com.sun.msv" + ".datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com." +
                             "sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001a" + "zb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0015ppq\u0000~\u0000<\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType" + "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0007decimalq\u0000~\u0000<q\u0000~\u0000|t\u0000\u000efractionDigits\u0000" + "\u0000\u0000\u0000q\u0000~\u0000vt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005value" + "xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000vt\u0000\fmaxInclusiv" + "esq\u0000~\u0000\u0080\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000qq\u0000~\u0000\u007fsr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005" + "valuexq\u0000~\u0000\u0081\u0080\u0000\u0000\u0000q\u0000~\u0000qq\u0000~\u0000\u0083sq\u0000~\u0000\u0085\u007f\u00ff\u00ff\u00ffq\u0000~\u0000lq\u0000~\u0000\u007fsr\u0000\u000fjava.lang.S" + "horthM7\u00134`\u00daR\u0002\u0000\u0001S\u0000\u0005valuexq\u0000~\u0000\u0081\u0080\u0000q\u0000~\u0000lq\u0000~\u0000\u0083sq\u0000~\u0000\u0088\u007f\u00ffq\u0000~\u0000-sq\u0000~\u0000." + "q\u0000~\u0000dq\u0000~\u0000$sq\u0000~\u00001ppsq\u0000~\u00003q\u0000~\u00006pq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000bloggin" + "gportq\u0000~\u0000\u001csq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsq\u0000~\u0000\u0012q\u0000~\u0000\u001cpq\u0000~\u0000\u001f\u0000\u0000q\u0000~\u0000#q" + "\u0000~\u0000#q\u0000~\u0000&sq\u0000~\u0000\'w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002t\u0000\u000e//preas01/irist\u0000\u000e//tdvas02/i" + "risxq\u0000~\u0000-sq\u0000~\u0000.t\u0000\u000estring-derivedq\u0000~\u0000\u001csq\u0000~\u00001ppsq\u0000~\u00003q\u0000~\u00006pq\u0000~" + "\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\nrmiserviceq\u0000~\u0000\u001csr\u0000\"com.sun.msv.grammar." + "ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/" +
                             "ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi" + "onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006paren" + "tt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u000e\u0001pq\u0000~\u0000Qq\u0000~\u0000\u0005q\u0000" + "~\u00002q\u0000~\u0000Lq\u0000~\u0000Zq\u0000~\u0000\u008cq\u0000~\u0000\u0099q\u0000~\u0000\u0006q\u0000~\u0000Iq\u0000~\u0000\bq\u0000~\u0000\u0007q\u0000~\u0000\u0091q\u0000~\u0000_q\u0000~\u0000\rx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.iris.client.settings.xml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {

        public Unmarshaller(org.iris.client.settings.xml.impl.runtime.UnmarshallingContext context)
        {
            super(context, "----------------");
        }

        protected Unmarshaller(org.iris.client.settings.xml.impl.runtime.UnmarshallingContext context, int startState)
        {
            this(context);
            state = startState;
        }

        public java.lang.Object owner()
        {
            return org.iris.client.settings.xml.impl.IrisserverTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname,
            org.xml.sax.Attributes __atts) throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:while (true)
            {
                switch (state)
                {
                    case 3:
                        if ( ("description" == ___local) && ("" == ___uri))
                        {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return;
                        }
                        break;
                    case 6:
                        if ( ("address" == ___local) && ("" == ___uri))
                        {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return;
                        }
                        break;
                    case 0:
                        if ( ("name" == ___local) && ("" == ___uri))
                        {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return;
                        }
                        break;
                    case 12:
                        if ( ("rmiservice" == ___local) && ("" == ___uri))
                        {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return;
                        }
                        break;
                    case 15:
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return;
                    case 9:
                        if ( ("loggingport" == ___local) && ("" == ___uri))
                        {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local,
            java.lang.String ___qname) throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:while (true)
            {
                switch (state)
                {
                    case 15:
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return;
                    case 11:
                        if ( ("loggingport" == ___local) && ("" == ___uri))
                        {
                            context.popAttributes();
                            state = 12;
                            return;
                        }
                        break;
                    case 14:
                        if ( ("rmiservice" == ___local) && ("" == ___uri))
                        {
                            context.popAttributes();
                            state = 15;
                            return;
                        }
                        break;
                    case 8:
                        if ( ("address" == ___local) && ("" == ___uri))
                        {
                            context.popAttributes();
                            state = 9;
                            return;
                        }
                        break;
                    case 2:
                        if ( ("name" == ___local) && ("" == ___uri))
                        {
                            context.popAttributes();
                            state = 3;
                            return;
                        }
                        break;
                    case 5:
                        if ( ("description" == ___local) && ("" == ___uri))
                        {
                            context.popAttributes();
                            state = 6;
                            return;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local,
            java.lang.String ___qname) throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:while (true)
            {
                switch (state)
                {
                    case 15:
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local,
            java.lang.String ___qname) throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:while (true)
            {
                switch (state)
                {
                    case 15:
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value) throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:while (true)
            {
                try
                {
                    switch (state)
                    {
                        case 1:
                            eatText1(value);
                            state = 2;
                            return;
                        case 10:
                            eatText2(value);
                            state = 11;
                            return;
                        case 13:
                            eatText3(value);
                            state = 14;
                            return;
                        case 7:
                            eatText4(value);
                            state = 8;
                            return;
                        case 15:
                            revertToParentFromText(value);
                            return;
                        case 4:
                            eatText5(value);
                            state = 5;
                            return;
                    }
                }
                catch (java.lang.RuntimeException e)
                {
                    handleUnexpectedTextException(value, e);
                }
                break ;
            }
        }

        private void eatText1(final java.lang.String value) throws org.xml.sax.SAXException
        {
            try
            {
                _Name = value;
            }
            catch (java.lang.Exception e)
            {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value) throws org.xml.sax.SAXException
        {
            try
            {
                _Loggingport = javax.xml.bind.DatatypeConverter.parseShort(com.sun.xml.bind.WhiteSpaceProcessor.
                               collapse(value));
                has_Loggingport = true;
            }
            catch (java.lang.Exception e)
            {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value) throws org.xml.sax.SAXException
        {
            try
            {
                _Rmiservice = value;
            }
            catch (java.lang.Exception e)
            {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value) throws org.xml.sax.SAXException
        {
            try
            {
                _Address = value;
            }
            catch (java.lang.Exception e)
            {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value) throws org.xml.sax.SAXException
        {
            try
            {
                _Description = value;
            }
            catch (java.lang.Exception e)
            {
                handleParseConversionException(e);
            }
        }

    }

}
