//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.06.27 at 10:55:25 CEST 
//


package org.iris.xml.messages.email.generated.impl;

public class EmailmessageTypeImpl implements org.iris.xml.messages.email.generated.EmailmessageType, com.sun.xml.bind.JAXBObject, org.iris.xml.messages.email.generated.impl.runtime.UnmarshallableObject, org.iris.xml.messages.email.generated.impl.runtime.XMLSerializable, org.iris.xml.messages.email.generated.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Bccaddress;
    protected java.lang.String _Receiver;
    protected java.lang.String _Contenttype;
    protected java.lang.String _Smtpserver;
    protected com.sun.xml.bind.util.ListImpl _Ccaddress;
    protected java.lang.String _Messagetype;
    protected java.util.Calendar _Messagecreatedate;
    protected java.lang.String _Subject;
    protected com.sun.xml.bind.util.ListImpl _Toaddress;
    protected java.lang.String _Sender;
    protected java.lang.String _Messagename;
    protected java.lang.String _Bodymessage;
    public final static java.lang.Class version = (org.iris.xml.messages.email.generated.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.iris.xml.messages.email.generated.EmailmessageType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getBccaddress() {
        if (_Bccaddress == null) {
            _Bccaddress = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Bccaddress;
    }

    public java.util.List getBccaddress() {
        return _getBccaddress();
    }

    public java.lang.String getReceiver() {
        return _Receiver;
    }

    public void setReceiver(java.lang.String value) {
        _Receiver = value;
    }

    public java.lang.String getContenttype() {
        return _Contenttype;
    }

    public void setContenttype(java.lang.String value) {
        _Contenttype = value;
    }

    public java.lang.String getSmtpserver() {
        return _Smtpserver;
    }

    public void setSmtpserver(java.lang.String value) {
        _Smtpserver = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getCcaddress() {
        if (_Ccaddress == null) {
            _Ccaddress = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Ccaddress;
    }

    public java.util.List getCcaddress() {
        return _getCcaddress();
    }

    public java.lang.String getMessagetype() {
        return _Messagetype;
    }

    public void setMessagetype(java.lang.String value) {
        _Messagetype = value;
    }

    public java.util.Calendar getMessagecreatedate() {
        return _Messagecreatedate;
    }

    public void setMessagecreatedate(java.util.Calendar value) {
        _Messagecreatedate = value;
    }

    public java.lang.String getSubject() {
        return _Subject;
    }

    public void setSubject(java.lang.String value) {
        _Subject = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getToaddress() {
        if (_Toaddress == null) {
            _Toaddress = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Toaddress;
    }

    public java.util.List getToaddress() {
        return _getToaddress();
    }

    public java.lang.String getSender() {
        return _Sender;
    }

    public void setSender(java.lang.String value) {
        _Sender = value;
    }

    public java.lang.String getMessagename() {
        return _Messagename;
    }

    public void setMessagename(java.lang.String value) {
        _Messagename = value;
    }

    public java.lang.String getBodymessage() {
        return _Bodymessage;
    }

    public void setBodymessage(java.lang.String value) {
        _Bodymessage = value;
    }

    public org.iris.xml.messages.email.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.iris.xml.messages.email.generated.impl.runtime.UnmarshallingContext context) {
        return new org.iris.xml.messages.email.generated.impl.EmailmessageTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.iris.xml.messages.email.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Bccaddress == null)? 0 :_Bccaddress.size());
        int idx5 = 0;
        final int len5 = ((_Ccaddress == null)? 0 :_Ccaddress.size());
        int idx9 = 0;
        final int len9 = ((_Toaddress == null)? 0 :_Toaddress.size());
        while (idx9 != len9) {
            context.startElement("", "toaddress");
            int idx_0 = idx9;
            try {
                idx_0 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_1 = idx9;
            try {
                idx_1 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Toaddress.get(idx9 ++)), "Toaddress");
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx5 != len5) {
            context.startElement("", "ccaddress");
            int idx_2 = idx5;
            try {
                idx_2 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_3 = idx5;
            try {
                idx_3 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Ccaddress.get(idx5 ++)), "Ccaddress");
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx1 != len1) {
            context.startElement("", "bccaddress");
            int idx_4 = idx1;
            try {
                idx_4 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_5 = idx1;
            try {
                idx_5 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Bccaddress.get(idx1 ++)), "Bccaddress");
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "subject");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Subject), "Subject");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "bodymessage");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Bodymessage), "Bodymessage");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
    }

    public void serializeAttributes(org.iris.xml.messages.email.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Bccaddress == null)? 0 :_Bccaddress.size());
        int idx5 = 0;
        final int len5 = ((_Ccaddress == null)? 0 :_Ccaddress.size());
        int idx9 = 0;
        final int len9 = ((_Toaddress == null)? 0 :_Toaddress.size());
        context.startAttribute("", "contenttype");
        try {
            context.text(((java.lang.String) _Contenttype), "Contenttype");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "messagecreatedate");
        try {
            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Messagecreatedate), null), "Messagecreatedate");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "messagename");
        try {
            context.text(((java.lang.String) _Messagename), "Messagename");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "messagetype");
        try {
            context.text(((java.lang.String) _Messagetype), "Messagetype");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "receiver");
        try {
            context.text(((java.lang.String) _Receiver), "Receiver");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "sender");
        try {
            context.text(((java.lang.String) _Sender), "Sender");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "smtpserver");
        try {
            context.text(((java.lang.String) _Smtpserver), "Smtpserver");
        } catch (java.lang.Exception e) {
            org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx9 != len9) {
            try {
                idx9 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            try {
                idx5 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public void serializeURIs(org.iris.xml.messages.email.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Bccaddress == null)? 0 :_Bccaddress.size());
        int idx5 = 0;
        final int len5 = ((_Ccaddress == null)? 0 :_Ccaddress.size());
        int idx9 = 0;
        final int len9 = ((_Toaddress == null)? 0 :_Toaddress.size());
        while (idx9 != len9) {
            try {
                idx9 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            try {
                idx5 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                org.iris.xml.messages.email.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.iris.xml.messages.email.generated.EmailmessageType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.gram"
+"mar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.grammar.trex.El"
+"ementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/N"
+"ameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aign"
+"oreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000pp"
+"sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relax"
+"ng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/ut"
+"il/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Bui"
+"ltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concre"
+"teType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000"
+"~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#sr\u0000\u001dcom.sun.msv.g"
+"rammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.A"
+"ttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0014xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0018ppsr\u0000\"com.sun."
+"msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0005QNamesr\u00005"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u00005q\u0000~\u0000#sr\u0000#com.sun.msv.grammar.Simpl"
+"eNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xr"
+"\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http:/"
+"/www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00000\u0001psq\u0000~\u00009t\u0000"
+"\ttoaddresst\u0000\u0000sq\u0000~\u0000,ppsq\u0000~\u0000\u0010q\u0000~\u00001psq\u0000~\u0000\u0013q\u0000~\u00001p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bs"
+"q\u0000~\u0000,ppsq\u0000~\u0000.q\u0000~\u00001pq\u0000~\u00002q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\tccaddressq\u0000~\u0000Cq\u0000~"
+"\u0000?sq\u0000~\u0000,ppsq\u0000~\u0000\u0010q\u0000~\u00001psq\u0000~\u0000\u0013q\u0000~\u00001p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bsq\u0000~\u0000,ppsq\u0000~"
+"\u0000.q\u0000~\u00001pq\u0000~\u00002q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\nbccaddressq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\u0013pp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bsq\u0000~\u0000,ppsq\u0000~\u0000.q\u0000~\u00001pq\u0000~\u00002q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007su"
+"bjectq\u0000~\u0000Csq\u0000~\u0000\u0013pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bsq\u0000~\u0000,ppsq\u0000~\u0000.q\u0000~\u00001pq\u0000~\u00002q\u0000~"
+"\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u000bbodymessageq\u0000~\u0000Csq\u0000~\u0000.ppq\u0000~\u0000\u001bsq\u0000~\u00009t\u0000\u000bconten"
+"ttypeq\u0000~\u0000Csq\u0000~\u0000.ppsq\u0000~\u0000\u0018ppsr\u0000%com.sun.msv.datatype.xsd.DateT"
+"imeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseT"
+"ype\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\bdateTimeq\u0000~\u00007q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000hq\u0000~"
+"\u0000#sq\u0000~\u00009t\u0000\u0011messagecreatedateq\u0000~\u0000Csq\u0000~\u0000.ppq\u0000~\u0000\u001bsq\u0000~\u00009t\u0000\u000bmessa"
+"genameq\u0000~\u0000Csq\u0000~\u0000.ppq\u0000~\u0000\u001bsq\u0000~\u00009t\u0000\u000bmessagetypeq\u0000~\u0000Csq\u0000~\u0000.ppq\u0000~"
+"\u0000\u001bsq\u0000~\u00009t\u0000\breceiverq\u0000~\u0000Csq\u0000~\u0000.ppq\u0000~\u0000\u001bsq\u0000~\u00009t\u0000\u0006senderq\u0000~\u0000Csq\u0000"
+"~\u0000.ppq\u0000~\u0000\u001bsq\u0000~\u00009t\u0000\nsmtpserverq\u0000~\u0000Csr\u0000\"com.sun.msv.grammar.Ex"
+"pressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Ex"
+"pressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expression"
+"Pool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt"
+"\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u001a\u0001pq\u0000~\u0000\u000eq\u0000~\u0000\u000fq\u0000~\u0000"
+"\nq\u0000~\u0000\u000bq\u0000~\u0000\u0005q\u0000~\u0000Dq\u0000~\u0000Lq\u0000~\u0000\rq\u0000~\u0000-q\u0000~\u0000\u0017q\u0000~\u0000Hq\u0000~\u0000Gq\u0000~\u0000Pq\u0000~\u0000Oq\u0000~\u0000"
+"Vq\u0000~\u0000Uq\u0000~\u0000\\q\u0000~\u0000[q\u0000~\u0000\u0007q\u0000~\u0000\fq\u0000~\u0000\u0006q\u0000~\u0000\tq\u0000~\u0000\bq\u0000~\u0000\u0012q\u0000~\u0000Eq\u0000~\u0000Mx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.iris.xml.messages.email.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.iris.xml.messages.email.generated.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------");
        }

        protected Unmarshaller(org.iris.xml.messages.email.generated.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.iris.xml.messages.email.generated.impl.EmailmessageTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "messagecreatedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  30 :
                        if (("bccaddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        if (("subject" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        break;
                    case  27 :
                        if (("ccaddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        if (("bccaddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "smtpserver");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 21;
                            continue outer;
                        }
                        break;
                    case  21 :
                        if (("toaddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        break;
                    case  36 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "receiver");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "contenttype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  24 :
                        if (("toaddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        if (("ccaddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "sender");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  33 :
                        if (("bodymessage" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "messagename");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "messagetype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Messagecreatedate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Smtpserver = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Receiver = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Contenttype = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Sender = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Messagename = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Messagetype = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "messagecreatedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  29 :
                        if (("bccaddress" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "smtpserver");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 21;
                            continue outer;
                        }
                        break;
                    case  36 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "receiver");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        break;
                    case  35 :
                        if (("bodymessage" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("subject" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "contenttype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  23 :
                        if (("toaddress" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "sender");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  26 :
                        if (("ccaddress" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "messagename");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "messagetype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("messagecreatedate" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  18 :
                        if (("smtpserver" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  36 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        if (("receiver" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("contenttype" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  15 :
                        if (("sender" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("messagename" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("messagetype" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("contenttype" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "messagecreatedate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "smtpserver");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 21;
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("messagecreatedate" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("sender" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  36 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "receiver");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "contenttype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  20 :
                        if (("smtpserver" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "sender");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "messagename");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "messagetype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  11 :
                        if (("messagetype" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("messagename" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("receiver" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  31 :
                            eatText8(value);
                            state = 32;
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "messagecreatedate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  22 :
                            eatText9(value);
                            state = 23;
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "smtpserver");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 21;
                                continue outer;
                            }
                            break;
                        case  28 :
                            eatText10(value);
                            state = 29;
                            return ;
                        case  4 :
                            eatText1(value);
                            state = 5;
                            return ;
                        case  36 :
                            revertToParentFromText(value);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "receiver");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            break;
                        case  10 :
                            eatText7(value);
                            state = 11;
                            return ;
                        case  25 :
                            eatText11(value);
                            state = 26;
                            return ;
                        case  1 :
                            eatText4(value);
                            state = 2;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "contenttype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  16 :
                            eatText5(value);
                            state = 17;
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "sender");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 18;
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "messagename");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 9;
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "messagetype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 12;
                                continue outer;
                            }
                            break;
                        case  13 :
                            eatText3(value);
                            state = 14;
                            return ;
                        case  7 :
                            eatText6(value);
                            state = 8;
                            return ;
                        case  19 :
                            eatText2(value);
                            state = 20;
                            return ;
                        case  34 :
                            eatText12(value);
                            state = 35;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Subject = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getToaddress().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getBccaddress().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getCcaddress().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Bodymessage = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
