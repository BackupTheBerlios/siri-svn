//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.10.03 at 10:59:53 CEST 
//


package org.siri.feederconfig.xmlbinding.impl;

public class ErrornotificationTypeImpl implements org.siri.feederconfig.xmlbinding.ErrornotificationType, com.sun.xml.bind.JAXBObject, org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallableObject, org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializable, org.siri.feederconfig.xmlbinding.impl.runtime.ValidatableObject
{

    protected boolean has_Numberoferrors;
    protected short _Numberoferrors;
    protected boolean has_NotifyeveryintervallInMilliSeconds;
    protected long _NotifyeveryintervallInMilliSeconds;
    protected org.siri.feederconfig.xmlbinding.EmailnotificationType _Emailnotification;
    protected org.siri.feederconfig.xmlbinding.SmsType _Sms;
    protected boolean has_Errornotificationon;
    protected boolean _Errornotificationon;
    public final static java.lang.Class version = (org.siri.feederconfig.xmlbinding.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.siri.feederconfig.xmlbinding.ErrornotificationType.class);
    }

    public short getNumberoferrors() {
        return _Numberoferrors;
    }

    public void setNumberoferrors(short value) {
        _Numberoferrors = value;
        has_Numberoferrors = true;
    }

    public long getNotifyeveryintervallInMilliSeconds() {
        return _NotifyeveryintervallInMilliSeconds;
    }

    public void setNotifyeveryintervallInMilliSeconds(long value) {
        _NotifyeveryintervallInMilliSeconds = value;
        has_NotifyeveryintervallInMilliSeconds = true;
    }

    public org.siri.feederconfig.xmlbinding.EmailnotificationType getEmailnotification() {
        return _Emailnotification;
    }

    public void setEmailnotification(org.siri.feederconfig.xmlbinding.EmailnotificationType value) {
        _Emailnotification = value;
    }

    public org.siri.feederconfig.xmlbinding.SmsType getSms() {
        return _Sms;
    }

    public void setSms(org.siri.feederconfig.xmlbinding.SmsType value) {
        _Sms = value;
    }

    public boolean isErrornotificationon() {
        return _Errornotificationon;
    }

    public void setErrornotificationon(boolean value) {
        _Errornotificationon = value;
        has_Errornotificationon = true;
    }

    public org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context) {
        return new org.siri.feederconfig.xmlbinding.impl.ErrornotificationTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Errornotificationon) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Errornotificationon"));
        }
        if (has_NotifyeveryintervallInMilliSeconds) {
            context.startElement("", "notifyeveryintervallInMilliSeconds");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _NotifyeveryintervallInMilliSeconds)), "NotifyeveryintervallInMilliSeconds");
            } catch (java.lang.Exception e) {
                org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Numberoferrors) {
            context.startElement("", "numberoferrors");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printShort(((short) _Numberoferrors)), "Numberoferrors");
            } catch (java.lang.Exception e) {
                org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Emailnotification!= null) {
            context.startElement("", "emailnotification");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Emailnotification), "Emailnotification");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Emailnotification), "Emailnotification");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Emailnotification), "Emailnotification");
            context.endElement();
        }
        if (_Sms!= null) {
            context.startElement("", "sms");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Sms), "Sms");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Sms), "Sms");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Sms), "Sms");
            context.endElement();
        }
    }

    public void serializeAttributes(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Errornotificationon) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Errornotificationon"));
        }
        context.startAttribute("", "errornotificationon");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Errornotificationon)), "Errornotificationon");
        } catch (java.lang.Exception e) {
            org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
    }

    public void serializeURIs(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Errornotificationon) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Errornotificationon"));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.siri.feederconfig.xmlbinding.ErrornotificationType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun"
+".msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype"
+"/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPa"
+"ir;xq\u0000~\u0000\u0003ppsr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\n"
+"baseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*co"
+"m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"
+"un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava"
+"/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da"
+"tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X"
+"MLSchemat\u0000\u0004longsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000*com.sun.msv.datatype.xsd.MaxIncl"
+"usiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv"
+".datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000"
+"*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisF"
+"acetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0018L\u0000\fconcreteTyp"
+"et\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001c"
+"xq\u0000~\u0000\u001bppq\u0000~\u0000#\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%ppq\u0000~\u0000#\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Inte"
+"gerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001ft\u0000\u0007integerq\u0000~\u0000#sr\u0000,com.sun.msv."
+"datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.s"
+"un.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001az"
+"b\u00ea\u0002\u0000\u0000xq\u0000~\u0000(ppq\u0000~\u0000#\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u00004t\u0000\u000efractionDigits\u0000\u0000"
+"\u0000\u0000q\u0000~\u0000.t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuex"
+"r\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000.t\u0000\fmaxInclusive"
+"sq\u0000~\u00008\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffsr\u00000com.sun.msv.grammar.Expression$NullSetExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ej"
+"B\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsq\u0000~"
+"\u0000\tppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~"
+"\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0010psq\u0000~\u0000\u0012ppsr\u0000\"com.sun.msv.datat"
+"ype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000>sq\u0000"
+"~\u0000?q\u0000~\u0000Gq\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.gram"
+"mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/X"
+"MLSchema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000f\u0001psq\u0000~\u0000It\u0000\"notifyeveryinterv"
+"allInMilliSecondst\u0000\u0000q\u0000~\u0000Osq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012"
+"ppsr\u0000\"com.sun.msv.datatype.xsd.ShortType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001ft\u0000\u0005shortq\u0000~\u0000#sq\u0000~\u0000$ppq\u0000~\u0000#\u0000\u0001sq\u0000~\u0000+ppq\u0000~\u0000#\u0000\u0000sr\u0000 com.sun.msv"
+".datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001ft\u0000\u0003intq\u0000~\u0000#sq\u0000~\u0000$"
+"ppq\u0000~\u0000#\u0000\u0001sq\u0000~\u0000+ppq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u00007sr\u0000\u0011java.lang.Integer"
+"\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u00009\u0080\u0000\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000;sq\u0000~\u0000b\u007f\u00ff\u00ff\u00ffq\u0000~\u0000^q\u0000~\u00007s"
+"r\u0000\u000fjava.lang.ShorthM7\u00134`\u00daR\u0002\u0000\u0001S\u0000\u0005valuexq\u0000~\u00009\u0080\u0000q\u0000~\u0000^q\u0000~\u0000;sq\u0000~\u0000"
+"e\u007f\u00ffq\u0000~\u0000>sq\u0000~\u0000?q\u0000~\u0000Zq\u0000~\u0000\u001fsq\u0000~\u0000\tppsq\u0000~\u0000Bq\u0000~\u0000\u0010pq\u0000~\u0000Dq\u0000~\u0000Kq\u0000~\u0000Os"
+"q\u0000~\u0000It\u0000\u000enumberoferrorsq\u0000~\u0000Sq\u0000~\u0000Osq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003q\u0000~\u0000\u0010psq\u0000~\u0000Bq\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$An"
+"yStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Ppsr\u0000 com.sun.msv.gram"
+"mar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Jq\u0000~\u0000Osq\u0000~\u0000It\u00006org.siri.feed"
+"erconfig.xmlbinding.EmailnotificationTypet\u0000+http://java.sun."
+"com/jaxb/xjc/dummy-elementssq\u0000~\u0000\tppsq\u0000~\u0000Bq\u0000~\u0000\u0010pq\u0000~\u0000Dq\u0000~\u0000Kq\u0000~"
+"\u0000Osq\u0000~\u0000It\u0000\u0011emailnotificationq\u0000~\u0000Sq\u0000~\u0000Osq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000rq\u0000~\u0000\u0010psq\u0000~\u0000Bq\u0000~\u0000\u0010pq\u0000~\u0000wq\u0000~\u0000yq\u0000"
+"~\u0000Osq\u0000~\u0000It\u0000(org.siri.feederconfig.xmlbinding.SmsTypeq\u0000~\u0000|sq\u0000"
+"~\u0000\tppsq\u0000~\u0000Bq\u0000~\u0000\u0010pq\u0000~\u0000Dq\u0000~\u0000Kq\u0000~\u0000Osq\u0000~\u0000It\u0000\u0003smsq\u0000~\u0000Sq\u0000~\u0000Osq\u0000~\u0000B"
+"ppsq\u0000~\u0000\u0012ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007booleanq\u0000~\u0000#q\u0000~\u0000>sq\u0000~\u0000?q\u0000~\u0000\u0092q\u0000~\u0000\u001fsq\u0000~\u0000It\u0000\u0013err"
+"ornotificationonq\u0000~\u0000Ssr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$"
+"ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHa"
+"sh\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/ms"
+"v/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0014\u0001pq\u0000~\u0000\u0006q\u0000~\u0000\u0007q\u0000~\u0000oq\u0000~\u0000\u0011q\u0000~\u0000\u0083q\u0000"
+"~\u0000qq\u0000~\u0000\u0085q\u0000~\u0000\bq\u0000~\u0000tq\u0000~\u0000\u0086q\u0000~\u0000\nq\u0000~\u0000Tq\u0000~\u0000mq\u0000~\u0000\u0081q\u0000~\u0000\u0005q\u0000~\u0000Aq\u0000~\u0000iq\u0000"
+"~\u0000Vq\u0000~\u0000}q\u0000~\u0000\u008ax"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.siri.feederconfig.xmlbinding.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------");
        }

        protected Unmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.siri.feederconfig.xmlbinding.impl.ErrornotificationTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        if (("smsonfailure" == ___local)&&("" == ___uri)) {
                            _Sms = ((org.siri.feederconfig.xmlbinding.impl.SmsTypeImpl) spawnChildFromEnterElement((org.siri.feederconfig.xmlbinding.impl.SmsTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("numberoferrors" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  15 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("notifyeveryintervallInMilliSeconds" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        if (("emailnotification" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "errornotificationon");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  10 :
                        if (("emailonfailure" == ___local)&&("" == ___uri)) {
                            _Emailnotification = ((org.siri.feederconfig.xmlbinding.impl.EmailnotificationTypeImpl) spawnChildFromEnterElement((org.siri.feederconfig.xmlbinding.impl.EmailnotificationTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  12 :
                        if (("sms" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Errornotificationon = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Errornotificationon = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "errornotificationon");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  8 :
                        if (("numberoferrors" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("sms" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("emailnotification" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  5 :
                        if (("notifyeveryintervallInMilliSeconds" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  0 :
                        if (("errornotificationon" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "errornotificationon");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("errornotificationon" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  6 :
                            state = 9;
                            continue outer;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "errornotificationon");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  7 :
                            eatText3(value);
                            state = 8;
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NotifyeveryintervallInMilliSeconds = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NotifyeveryintervallInMilliSeconds = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Numberoferrors = javax.xml.bind.DatatypeConverter.parseShort(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Numberoferrors = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
