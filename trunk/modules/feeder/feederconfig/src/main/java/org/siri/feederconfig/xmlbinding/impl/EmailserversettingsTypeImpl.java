//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.10.03 at 10:59:53 CEST 
//


package org.siri.feederconfig.xmlbinding.impl;

public class EmailserversettingsTypeImpl implements org.siri.feederconfig.xmlbinding.EmailserversettingsType, com.sun.xml.bind.JAXBObject, org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallableObject, org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializable, org.siri.feederconfig.xmlbinding.impl.runtime.ValidatableObject
{

    protected boolean has_SendintervallInMilliSeconds;
    protected long _SendintervallInMilliSeconds;
    protected org.siri.feederconfig.xmlbinding.ImapType _Imap;
    protected org.siri.feederconfig.xmlbinding.PopType _Pop;
    protected org.siri.feederconfig.xmlbinding.SmtpType _Smtp;
    public final static java.lang.Class version = (org.siri.feederconfig.xmlbinding.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.siri.feederconfig.xmlbinding.EmailserversettingsType.class);
    }

    public long getSendintervallInMilliSeconds() {
        return _SendintervallInMilliSeconds;
    }

    public void setSendintervallInMilliSeconds(long value) {
        _SendintervallInMilliSeconds = value;
        has_SendintervallInMilliSeconds = true;
    }

    public org.siri.feederconfig.xmlbinding.ImapType getImap() {
        return _Imap;
    }

    public void setImap(org.siri.feederconfig.xmlbinding.ImapType value) {
        _Imap = value;
    }

    public org.siri.feederconfig.xmlbinding.PopType getPop() {
        return _Pop;
    }

    public void setPop(org.siri.feederconfig.xmlbinding.PopType value) {
        _Pop = value;
    }

    public org.siri.feederconfig.xmlbinding.SmtpType getSmtp() {
        return _Smtp;
    }

    public void setSmtp(org.siri.feederconfig.xmlbinding.SmtpType value) {
        _Smtp = value;
    }

    public org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context) {
        return new org.siri.feederconfig.xmlbinding.impl.EmailserversettingsTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_SendintervallInMilliSeconds) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "SendintervallInMilliSeconds"));
        }
        if (_Smtp!= null) {
            context.startElement("", "smtp");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Smtp), "Smtp");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Smtp), "Smtp");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Smtp), "Smtp");
            context.endElement();
        }
        if (_Pop!= null) {
            context.startElement("", "pop");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pop), "Pop");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pop), "Pop");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Pop), "Pop");
            context.endElement();
        }
        if (_Imap!= null) {
            context.startElement("", "imap");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Imap), "Imap");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Imap), "Imap");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Imap), "Imap");
            context.endElement();
        }
    }

    public void serializeAttributes(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_SendintervallInMilliSeconds) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "SendintervallInMilliSeconds"));
        }
        context.startAttribute("", "sendintervallInMilliSeconds");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _SendintervallInMilliSeconds)), "SendintervallInMilliSeconds");
        } catch (java.lang.Exception e) {
            org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
    }

    public void serializeURIs(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_SendintervallInMilliSeconds) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "SendintervallInMilliSeconds"));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.siri.feederconfig.xmlbinding.EmailserversettingsType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001psr\u0000 com.sun.msv.grammar"
+".AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001apsr\u0000#com.sun.msv.grammar.SimpleNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespace"
+"URIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000)org.siri.feederconfig.xmlbinding.SmtpTypet\u0000"
+"+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\bppsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/r"
+"elaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/ms"
+"v/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Qname"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/m"
+"sv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2"
+"001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!"
+"xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema"
+"-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004smtpt\u0000\u0000q\u0000~\u0000\u001fsq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u0000(org.siri.feederconfig.xmlbinding.PopTypeq\u0000~\u0000$sq\u0000~\u0000\b"
+"ppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0003popq\u0000~\u0000?q\u0000~\u0000\u001fsq\u0000~\u0000\bpps"
+"q\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)org.siri.feederconfig.xmlbinding.Im"
+"apTypeq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004imapq"
+"\u0000~\u0000?q\u0000~\u0000\u001fsq\u0000~\u0000\u0016ppsq\u0000~\u0000\'ppsr\u0000!com.sun.msv.datatype.xsd.LongTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType"
+"\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatat"
+"ypeImpl;xq\u0000~\u0000,q\u0000~\u00001t\u0000\u0004longq\u0000~\u00005sr\u0000*com.sun.msv.datatype.xsd."
+"MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Ran"
+"geFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com."
+"sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008a"
+"T\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000^L\u0000\fconc"
+"reteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNa"
+"meq\u0000~\u0000!xq\u0000~\u0000.ppq\u0000~\u00005\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclus"
+"iveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000bppq\u0000~\u00005\u0000\u0000sr\u0000$com.sun.msv.datatype.x"
+"sd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000]q\u0000~\u00001t\u0000\u0007integerq\u0000~\u00005sr\u0000,com.s"
+"un.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr"
+"\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFace"
+"tT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000eppq\u0000~\u00005\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Numb"
+"erType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000,q\u0000~\u00001t\u0000\u0007decimalq\u0000~\u00005q\u0000~\u0000qt\u0000\u000efractionD"
+"igits\u0000\u0000\u0000\u0000q\u0000~\u0000kt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000"
+"\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000kt\u0000\fmaxIn"
+"clusivesq\u0000~\u0000u\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u00007sq\u0000~\u00008q\u0000~\u0000`q\u0000~\u00001sq\u0000~\u0000 t\u0000\u001bsendinter"
+"vallInMilliSecondsq\u0000~\u0000?sr\u0000\"com.sun.msv.grammar.ExpressionPoo"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPoo"
+"l$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Closed"
+"Hash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/"
+"msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0012\u0001pq\u0000~\u0000\u0010q\u0000~\u0000Bq\u0000~\u0000Oq\u0000~\u0000\u0006q\u0000~\u0000\u0012"
+"q\u0000~\u0000Dq\u0000~\u0000Qq\u0000~\u0000\u0015q\u0000~\u0000Eq\u0000~\u0000Rq\u0000~\u0000\tq\u0000~\u0000@q\u0000~\u0000Mq\u0000~\u0000\u0005q\u0000~\u0000%q\u0000~\u0000Iq\u0000~\u0000V"
+"q\u0000~\u0000\u0007x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.siri.feederconfig.xmlbinding.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------");
        }

        protected Unmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.siri.feederconfig.xmlbinding.impl.EmailserversettingsTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "sendintervallInMilliSeconds");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  6 :
                        if (("pop" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  3 :
                        if (("smtp" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  10 :
                        if (("imapserver" == ___local)&&("" == ___uri)) {
                            _Imap = ((org.siri.feederconfig.xmlbinding.impl.ImapTypeImpl) spawnChildFromEnterElement((org.siri.feederconfig.xmlbinding.impl.ImapTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  4 :
                        if (("smtpserver" == ___local)&&("" == ___uri)) {
                            _Smtp = ((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl) spawnChildFromEnterElement((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Smtp = ((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl) spawnChildFromEnterElement((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  7 :
                        if (("popserver" == ___local)&&("" == ___uri)) {
                            _Pop = ((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl) spawnChildFromEnterElement((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Pop = ((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl) spawnChildFromEnterElement((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  9 :
                        if (("imap" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SendintervallInMilliSeconds = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SendintervallInMilliSeconds = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "sendintervallInMilliSeconds");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("smtp" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  11 :
                        if (("imap" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  8 :
                        if (("pop" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  4 :
                        _Smtp = ((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl) spawnChildFromLeaveElement((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        _Pop = ((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl) spawnChildFromLeaveElement((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("sendintervallInMilliSeconds" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  4 :
                        _Smtp = ((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl) spawnChildFromEnterAttribute((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        _Pop = ((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl) spawnChildFromEnterAttribute((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "sendintervallInMilliSeconds");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("sendintervallInMilliSeconds" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  4 :
                        _Smtp = ((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl) spawnChildFromLeaveAttribute((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        _Pop = ((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl) spawnChildFromLeaveAttribute((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  12 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "sendintervallInMilliSeconds");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  4 :
                            _Smtp = ((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl) spawnChildFromText((org.siri.feederconfig.xmlbinding.impl.SmtpTypeImpl.class), 5, value));
                            return ;
                        case  7 :
                            _Pop = ((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl) spawnChildFromText((org.siri.feederconfig.xmlbinding.impl.PopTypeImpl.class), 8, value));
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
