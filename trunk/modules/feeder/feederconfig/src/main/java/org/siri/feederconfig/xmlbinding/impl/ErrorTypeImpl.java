//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.10.03 at 10:59:53 CEST 
//


package org.siri.feederconfig.xmlbinding.impl;

public class ErrorTypeImpl implements org.siri.feederconfig.xmlbinding.ErrorType, com.sun.xml.bind.JAXBObject, org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallableObject, org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializable, org.siri.feederconfig.xmlbinding.impl.runtime.ValidatableObject
{

    protected org.siri.feederconfig.xmlbinding.ErrornotificationType _Errornotification;
    protected java.lang.String _Errorinfofolderpath;
    protected boolean has_Errorhandleron;
    protected boolean _Errorhandleron;
    protected boolean has_Sortonresend;
    protected boolean _Sortonresend;
    protected java.lang.String _CronJob;
    protected java.lang.String _Errorfolderpath;
    public final static java.lang.Class version = (org.siri.feederconfig.xmlbinding.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.siri.feederconfig.xmlbinding.ErrorType.class);
    }

    public org.siri.feederconfig.xmlbinding.ErrornotificationType getErrornotification() {
        return _Errornotification;
    }

    public void setErrornotification(org.siri.feederconfig.xmlbinding.ErrornotificationType value) {
        _Errornotification = value;
    }

    public java.lang.String getErrorinfofolderpath() {
        return _Errorinfofolderpath;
    }

    public void setErrorinfofolderpath(java.lang.String value) {
        _Errorinfofolderpath = value;
    }

    public boolean isErrorhandleron() {
        return _Errorhandleron;
    }

    public void setErrorhandleron(boolean value) {
        _Errorhandleron = value;
        has_Errorhandleron = true;
    }

    public boolean isSortonresend() {
        return _Sortonresend;
    }

    public void setSortonresend(boolean value) {
        _Sortonresend = value;
        has_Sortonresend = true;
    }

    public java.lang.String getCronJob() {
        return _CronJob;
    }

    public void setCronJob(java.lang.String value) {
        _CronJob = value;
    }

    public java.lang.String getErrorfolderpath() {
        return _Errorfolderpath;
    }

    public void setErrorfolderpath(java.lang.String value) {
        _Errorfolderpath = value;
    }

    public org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context) {
        return new org.siri.feederconfig.xmlbinding.impl.ErrorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Errorhandleron) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Errorhandleron"));
        }
        if (!has_Sortonresend) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Sortonresend"));
        }
        context.startElement("", "errorfolderpath");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Errorfolderpath), "Errorfolderpath");
        } catch (java.lang.Exception e) {
            org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "errorinfofolderpath");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Errorinfofolderpath), "Errorinfofolderpath");
        } catch (java.lang.Exception e) {
            org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "sortonresend");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Sortonresend)), "Sortonresend");
        } catch (java.lang.Exception e) {
            org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "CronJob");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _CronJob), "CronJob");
        } catch (java.lang.Exception e) {
            org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "errornotification");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Errornotification), "Errornotification");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Errornotification), "Errornotification");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Errornotification), "Errornotification");
        context.endElement();
    }

    public void serializeAttributes(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Errorhandleron) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Errorhandleron"));
        }
        if (!has_Sortonresend) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Sortonresend"));
        }
        context.startAttribute("", "errorhandleron");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Errorhandleron)), "Errorhandleron");
        } catch (java.lang.Exception e) {
            org.siri.feederconfig.xmlbinding.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
    }

    public void serializeURIs(org.siri.feederconfig.xmlbinding.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Errorhandleron) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Errorhandleron"));
        }
        if (!has_Sortonresend) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Sortonresend"));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.siri.feederconfig.xmlbinding.ErrorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com."
+"sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000"
+"\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elem"
+"entExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMode"
+"lq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000"
+"\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv"
+".datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype."
+"xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd"
+".ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatat"
+"ypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btyp"
+"eNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpa"
+"ceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006anyURIsr"
+"\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000\u001dcom.sun"
+".msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.gra"
+"mmar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~"
+"\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u000fppsr\u0000\"co"
+"m.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNa"
+"meq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000,q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNa"
+"meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dc"
+"om.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://ww"
+"w.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expr"
+"ession$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\'\u0001psq\u0000~\u0000.t\u0000\u000fer"
+"rorfolderpatht\u0000\u0000sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0012sq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000(pq\u0000"
+"~\u0000)q\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0013errorinfofolderpathq\u0000~\u00008sq\u0000~\u0000\npp\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u000fppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007booleanq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000Dq\u0000~\u0000\u001asq\u0000~\u0000#ppsq\u0000"
+"~\u0000%q\u0000~\u0000(pq\u0000~\u0000)q\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\fsortonresendq\u0000~\u00008sq\u0000~\u0000\npp\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImp"
+"l;xq\u0000~\u0000\u0016q\u0000~\u00008t\u0000\u0011cronintervallTypesr\u00005com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dsr\u0000#com.sun.m"
+"sv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0014q"
+"\u0000~\u0000\u001at\u0000\u0006stringq\u0000~\u0000S\u0001\u0000\u0000\u0000\u0000q\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000Vq\u0000~\u00008sq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000"
+"~\u0000(pq\u0000~\u0000)q\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0007CronJobq\u0000~\u00008sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\npp\u0000sq\u0000~\u0000#ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u0000(psq\u0000~\u0000%q\u0000~\u0000(psr\u00002com.sun.msv.grammar.Expression$AnyStr"
+"ingExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u00005psr\u0000 com.sun.msv.grammar."
+"AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000/q\u0000~\u00004sq\u0000~\u0000.t\u00006org.siri.feederco"
+"nfig.xmlbinding.ErrornotificationTypet\u0000+http://java.sun.com/"
+"jaxb/xjc/dummy-elementssq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000(pq\u0000~\u0000)q\u0000~\u00000q\u0000~\u00004sq"
+"\u0000~\u0000.t\u0000\u0011errornotificationq\u0000~\u00008sq\u0000~\u0000%ppq\u0000~\u0000Asq\u0000~\u0000.t\u0000\u000eerrorhand"
+"leronq\u0000~\u00008sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
+"xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003"
+"\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/E"
+"xpressionPool;xp\u0000\u0000\u0000\u0011\u0001pq\u0000~\u0000Kq\u0000~\u0000]q\u0000~\u0000@q\u0000~\u0000\u0006q\u0000~\u0000_q\u0000~\u0000bq\u0000~\u0000\tq\u0000~"
+"\u0000\u000eq\u0000~\u0000:q\u0000~\u0000\u0005q\u0000~\u0000$q\u0000~\u0000;q\u0000~\u0000Fq\u0000~\u0000Xq\u0000~\u0000\u0007q\u0000~\u0000kq\u0000~\u0000\bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.siri.feederconfig.xmlbinding.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(org.siri.feederconfig.xmlbinding.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.siri.feederconfig.xmlbinding.impl.ErrorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        attIdx = context.getAttribute("", "errornotificationon");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        if (("errorfolderpath" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("sortonresend" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("errornotification" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "errorhandleron");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  12 :
                        if (("CronJob" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("errorinfofolderpath" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Errorhandleron = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Errorhandleron = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        if (("CronJob" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "errornotificationon");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        if (("errorinfofolderpath" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "errorhandleron");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  11 :
                        if (("sortonresend" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        if (("errorfolderpath" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("errornotification" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        if (("errornotificationon" == ___local)&&("" == ___uri)) {
                            _Errornotification = ((org.siri.feederconfig.xmlbinding.impl.ErrornotificationTypeImpl) spawnChildFromEnterAttribute((org.siri.feederconfig.xmlbinding.impl.ErrornotificationTypeImpl.class), 17, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("errorhandleron" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("errorhandleron" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "errornotificationon");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "errorhandleron");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  18 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "errornotificationon");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  13 :
                            eatText3(value);
                            state = 14;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "errorhandleron");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  18 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            eatText4(value);
                            state = 8;
                            return ;
                        case  10 :
                            eatText5(value);
                            state = 11;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Errorfolderpath = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CronJob = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Errorinfofolderpath = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Sortonresend = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Sortonresend = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
